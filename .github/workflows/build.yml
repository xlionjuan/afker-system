---
name: build-ublue-custom
on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '05 10 5 * *'  # Runs at 10:05am UTC on the 5th of every month
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
  workflow_dispatch:
  
env:
  MY_IMAGE_NAME: "${{ github.event.repository.name }}"  # the name of the image produced by this build, matches repo names
  MY_IMAGE_DESC: " AFKer, for single purpose, especially for some online services or web applications like some streaming platforms, using ublue/kinoite (KDE). "
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"  # do not edit

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.brand_name}}-${{ inputs.stream_name }}
  cancel-in-progress: true

jobs:
  build_push:
    name: Build and push image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with: 
            persist-credentials: false

      - uses: sigstore/cosign-installer@3454372f43399081ed03b604cb2d021dabca52bb # v3.8.2

      - name: Verify
        shell: bash
        run: |
          set -oue pipefail
          echo "---Grep image name---"
          containerfile_path="./Containerfile"
          image=$(grep -i '^FROM' "$containerfile_path" | awk '{print $2}')
          echo "Image: "${image}""
          echo ""
          echo "Using Cosign to verify image..."
          cosign verify \
            --key https://raw.githubusercontent.com/ublue-os/main/refs/heads/main/cosign.pub \
            "${image}"

      #- name: Maximize build space
        #uses: ublue-os/remove-unwanted-software@v7

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        id: meta
        with:
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.MY_IMAGE_NAME }}
          tags: |
            type=raw,value={{date 'YYYYMMDD'}},enable={{is_default_branch}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=pr
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
            org.opencontainers.image.description=${{ env.MY_IMAGE_DESC }}
            org.opencontainers.image.title=${{ env.MY_IMAGE_NAME }}

      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2.13
        with:
          containerfiles: |
            ./Containerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: true

      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1.7
        with:
          username: ${{ github.actor }}
          password: ${{ github.token }}
          registry: ghcr.io

      - name: Push Image to GHCR
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2.8
        id: push
        with:
          tags: ${{ steps.build_image.outputs.tags }}
          extra-args: |
            --compression-format=zstd

    # Sign container
      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${FULL_NAME}@${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}
          FULL_NAME: ${{ env.IMAGE_REGISTRY }}/${{ github.event.repository.name }}

      - name: Attest
        if: github.event_name != 'pull_request'
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2
        with:
          subject-name: ${{ env.IMAGE_REGISTRY }}/${{ env.MY_IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true